{"ast":null,"code":"import _slicedToArray from\"C:/Users/Katerina/Desktop/vremenska-prognoza/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{AsyncPaginate}from\"react-select-async-paginate\";import{Geo_API_URL,geoApiOptions}from\"../data/Data.js\";import{jsx as _jsx}from\"react/jsx-runtime\";var Search=function Search(_ref){var OnSearchChange=_ref.OnSearchChange;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),search=_useState2[0],setSearch=_useState2[1];var loadOptions=function loadOptions(inputValue){return fetch(\"\".concat(Geo_API_URL,\"/cities?minPopulation=100000&namePrefix=\").concat(inputValue),geoApiOptions).then(function(response){return response.json();}).then(function(response){console.log(\"borjan\",response);return{options:response.data.map(function(city){return{value:\"\".concat(city.latitude,\" \").concat(city.longitude),label:\"\".concat(city.name,\" \").concat(city.countryCode)};})};}).catch(function(err){return console.error(\"Darijan\",err);});};var handleOnChange=function handleOnChange(searchData){setSearch(searchData);OnSearchChange(searchData);};return/*#__PURE__*/_jsx(AsyncPaginate,{placeholder:\"Search for City\",debounceTimeout:600,value:search,onChange:handleOnChange,loadOptions:loadOptions});};export default Search;","map":{"version":3,"names":["React","useState","AsyncPaginate","Geo_API_URL","geoApiOptions","Search","OnSearchChange","search","setSearch","loadOptions","inputValue","fetch","then","response","json","console","log","options","data","map","city","value","latitude","longitude","label","name","countryCode","catch","err","error","handleOnChange","searchData"],"sources":["C:/Users/Katerina/Desktop/vremenska-prognoza/src/components/Search.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { AsyncPaginate } from \"react-select-async-paginate\";\r\nimport { Geo_API_URL, geoApiOptions } from \"../data/Data.js\";\r\n\r\nconst Search = ({ OnSearchChange }) => {\r\n  const [search, setSearch] = useState(null);\r\n\r\n  const loadOptions = (inputValue) => {\r\n    return fetch(\r\n      `${Geo_API_URL}/cities?minPopulation=100000&namePrefix=${inputValue}`,\r\n      geoApiOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log(\"borjan\", response);\r\n        return {\r\n          options: response.data.map((city) => {\r\n            return {\r\n              value: `${city.latitude} ${city.longitude}`,\r\n              label: `${city.name} ${city.countryCode}`,\r\n            };\r\n          }),\r\n        };\r\n      })\r\n      .catch((err) => console.error(\"Darijan\", err));\r\n  };\r\n\r\n  const handleOnChange = (searchData) => {\r\n    setSearch(searchData);\r\n    OnSearchChange(searchData);\r\n  };\r\n\r\n  return (\r\n    <AsyncPaginate\r\n      placeholder=\"Search for City\"\r\n      debounceTimeout={600}\r\n      value={search}\r\n      onChange={handleOnChange}\r\n      loadOptions={loadOptions}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"],"mappings":"kIAAA,MAAOA,MAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,aAAa,KAAQ,6BAA6B,CAC3D,OAASC,WAAW,CAAEC,aAAa,KAAQ,iBAAiB,CAAC,2CAE7D,GAAMC,OAAM,CAAG,QAATA,OAAM,MAA2B,IAArBC,eAAc,MAAdA,cAAc,CAC9B,cAA4BL,QAAQ,CAAC,IAAI,CAAC,wCAAnCM,MAAM,eAAEC,SAAS,eAExB,GAAMC,YAAW,CAAG,QAAdA,YAAW,CAAIC,UAAU,CAAK,CAClC,MAAOC,MAAK,WACPR,WAAW,oDAA2CO,UAAU,EACnEN,aAAa,CACd,CACEQ,IAAI,CAAC,SAACC,QAAQ,QAAKA,SAAQ,CAACC,IAAI,EAAE,GAAC,CACnCF,IAAI,CAAC,SAACC,QAAQ,CAAK,CAClBE,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAEH,QAAQ,CAAC,CAC/B,MAAO,CACLI,OAAO,CAAEJ,QAAQ,CAACK,IAAI,CAACC,GAAG,CAAC,SAACC,IAAI,CAAK,CACnC,MAAO,CACLC,KAAK,WAAKD,IAAI,CAACE,QAAQ,aAAIF,IAAI,CAACG,SAAS,CAAE,CAC3CC,KAAK,WAAKJ,IAAI,CAACK,IAAI,aAAIL,IAAI,CAACM,WAAW,CACzC,CAAC,CACH,CAAC,CACH,CAAC,CACH,CAAC,CAAC,CACDC,KAAK,CAAC,SAACC,GAAG,QAAKb,QAAO,CAACc,KAAK,CAAC,SAAS,CAAED,GAAG,CAAC,GAAC,CAClD,CAAC,CAED,GAAME,eAAc,CAAG,QAAjBA,eAAc,CAAIC,UAAU,CAAK,CACrCvB,SAAS,CAACuB,UAAU,CAAC,CACrBzB,cAAc,CAACyB,UAAU,CAAC,CAC5B,CAAC,CAED,mBACE,KAAC,aAAa,EACZ,WAAW,CAAC,iBAAiB,CAC7B,eAAe,CAAE,GAAI,CACrB,KAAK,CAAExB,MAAO,CACd,QAAQ,CAAEuB,cAAe,CACzB,WAAW,CAAErB,WAAY,EACzB,CAEN,CAAC,CAED,cAAeJ,OAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}