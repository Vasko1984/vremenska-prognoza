{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katerina\\\\Desktop\\\\vremenska-prognoza\\\\src\\\\components\\\\Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { AsyncPaginate } from \"react-select-async-paginate\";\nimport { Geo_API_URL, geoApiOptions } from \"../data/Data.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = _ref => {\n  _s();\n  let {\n    OnSearchChange\n  } = _ref;\n  const [search, setSearch] = useState(null);\n  const loadOptions = inputValue => {\n    return fetch(`${Geo_API_URL}/cities?minPopulation=100000namePrefix=${inputValue}`, geoApiOptions).then(response => response.json()).then(response => console.log(response)).catch(err => console.error(err));\n  };\n  const handleOnChange = searchData => {\n    setSearch(searchData);\n    OnSearchChange(searchData);\n  };\n  return /*#__PURE__*/_jsxDEV(AsyncPaginate, {\n    placeholder: \"Search for City\",\n    debounceTimeout: 600,\n    value: search,\n    onChange: handleOnChange,\n    loadOptions: loadOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"rZ+0pF47En10nDqJpRK7x4d9dB0=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","AsyncPaginate","Geo_API_URL","geoApiOptions","Search","OnSearchChange","search","setSearch","loadOptions","inputValue","fetch","then","response","json","console","log","catch","err","error","handleOnChange","searchData"],"sources":["C:/Users/Katerina/Desktop/vremenska-prognoza/src/components/Search.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { AsyncPaginate } from \"react-select-async-paginate\";\r\nimport { Geo_API_URL, geoApiOptions } from \"../data/Data.js\";\r\n\r\nconst Search = ({ OnSearchChange }) => {\r\n  const [search, setSearch] = useState(null);\r\n\r\n  const loadOptions = (inputValue) => {\r\n    return fetch(\r\n      `${Geo_API_URL}/cities?minPopulation=100000namePrefix=${inputValue}`,\r\n      geoApiOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((response) => console.log(response))\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  const handleOnChange = (searchData) => {\r\n    setSearch(searchData);\r\n    OnSearchChange(searchData);\r\n  };\r\n\r\n  return (\r\n    <AsyncPaginate\r\n      placeholder=\"Search for City\"\r\n      debounceTimeout={600}\r\n      value={search}\r\n      onChange={handleOnChange}\r\n      loadOptions={loadOptions}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,WAAW,EAAEC,aAAa,QAAQ,iBAAiB;AAAC;AAE7D,MAAMC,MAAM,GAAG,QAAwB;EAAA;EAAA,IAAvB;IAAEC;EAAe,CAAC;EAChC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMQ,WAAW,GAAIC,UAAU,IAAK;IAClC,OAAOC,KAAK,CACT,GAAER,WAAY,0CAAyCO,UAAW,EAAC,EACpEN,aAAa,CACd,CACEQ,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEC,QAAQ,IAAKE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC,CAAC,CACzCI,KAAK,CAAEC,GAAG,IAAKH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC,CAAC;EACvC,CAAC;EAED,MAAME,cAAc,GAAIC,UAAU,IAAK;IACrCb,SAAS,CAACa,UAAU,CAAC;IACrBf,cAAc,CAACe,UAAU,CAAC;EAC5B,CAAC;EAED,oBACE,QAAC,aAAa;IACZ,WAAW,EAAC,iBAAiB;IAC7B,eAAe,EAAE,GAAI;IACrB,KAAK,EAAEd,MAAO;IACd,QAAQ,EAAEa,cAAe;IACzB,WAAW,EAAEX;EAAY;IAAA;IAAA;IAAA;EAAA,QACzB;AAEN,CAAC;AAAC,GA3BIJ,MAAM;AAAA,KAANA,MAAM;AA6BZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}